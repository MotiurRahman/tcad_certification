/*
	Localization strings file. To translate, copy the entire "en-US" branch, paste in as new member of the object, 
	set its name to be the two-letter language code, and translate each string.
	As shown, strings can include simple HTML.
*/
String.toLocaleString({
	"en-US": {
		"%l_filetitle": "You're a Native App Developer Now",
		"%l_lessontitle": "You're a Native App Developer Now",
		"%l_slidenote_titleslide": "<b>Module time: 60 mins (20 mins teaching</b>, 20 mins for Android lab, 20 mins for iPhone lab)<br><b>Be brief, do not cover the native tools in depth></b><br>Goal is to be aware of native tools and workflows. Might need to use some of these tools during development or debugging.",
		"%l_agenda1": "Overview of a generic tool chain",
		"%l_agenda2": "The Android tool chain and 'Hello World!'",
		"%l_agenda3": "The iPhone tool chain and 'Hello World!'",
		"%l_agenda4": "Titanium and the native SDKs",
		"%l_agenda5": "Lab Exercise",
		"%l_slidenote_agenda": "Present the agenda...",
		
		"%l_toolchain": "Tool Chains - Everybody Has Them",
		"%l_slidenote_introduction": "They are usually a set of executables/scripts that can be invoked outside an IDE (integrated development environment)<br>Titanium abstracts away a lot of the daunting work of the tool chain setup and maintaining the environment, however to be effective it is essential to understand the background tools of that process<br>Titanium executes those tools as necessary to make your life easier and more productive.",
		"%l_generic_toolchain": "A Generic Tool Chain",
		"%l_slidenote_generic_toolchain": "",
		"%l_android_toolchain": "The Android Tool Chain",
		"%l_slidenote_android_toolchain": "",
		"%l_whats_in_the_box": "What's in the box?",
		"%l_slidenote_whats_in_the_box": "Quick tour of what comes with the Android SDK<br><ul><li>Show SDK location</li><li>Describe platforms directory (OS version files)</li><li>Describe add-ons directory</li><li>Difference between vanilla and google-apis SDKs</li><li>Describe tools / platform-tools directory</li>	<li>Briefly describe adb, ddms, and android files</li></ul>",
		"%l_slidenote_whats_in_the_box_world": "Hello World",
		"%l_hiworldtoolchain": "<strong><em>for the Android Native Tool Chain</em>",
		"%l_slidenote_hello_world": "Now lets demonstrate how to create, build and run your first hello world application on the emulator of Android.<br>This demonstration is based on the command line approach of Android development.",
		"%l_creating_hello_world": "Creating the Hello World Project Structure",
		"%l_slidenote_creating_hello_world": "<ol><li>Describe command and its arguments...target # is NOT the android SDK version<br></li><li>Do it in the terminal></li>				<li>Show project files that are created</li></ol>Target: enter <u>android list targets</u> to get a list",
		"%l_how_to_build": "How to build your hello world application",
		"%l_slidenote_how_to_build": "Build using Apache Ant (might not be installed on your system)<br>Watch for 'Build Successful'<br>Next we need a virtual device in which to run our app",
		"%l_create_virtual_device": "Creating a virtual device",
		"%l_slidenote_create_virtual_device": "When issuing the command ”android” stand alone it will start this android virtual device manager, by clicking new you will be able to create a new virtual device for your needs.<br> Note that Titanium creates AVDs for you",
		"%l_virtual_device_parameters": "Virtual Device Parameters",
		"%l_slidenote_virtual_device_parameters": "Options dialog permits settings for each virtual device. It is possible to customize hardware settings as well.<br>Before installation you need to start your virtual device, in the android virtual manager, simply click start and it will show up, it takes about a minute or two.",
		"%l_how_to_install": "How to install your application to the target",
		"%l_slidenote_how_to_install": "You install the apk file to the target with the help of the android debug bridge tool by specifying an install argument.<br>It can be installed onto an emulated device or the connected phone.",
		"%l_hello_world_running": "Hello World application running",
		"%l_slidenote_hello_world_running": "When the application is running you can use the emulator to simulate things on the phone as well as stimulating it's user interface.",
		"%l_application_starting_point": "Application starting point",
		"%l_slidenote_application_starting_point": "View layouts are represented by xml files and properties in the XML files.Here we can see a simple TextView specified on the view layout.",
		"%l_dalvik_debug_monitor": "Dalvik Debug Monitor",
		"%l_slidenote_dalvik_debug_monitor": "With the Dalvik Monitor you can monitor threads, processes and memory in Android emulated or target devices.<br>Demo ddms: show log output, simple filter, plus setting GPS coords<br>Also demo / introduce adb -d logcat (use -e for emulator)",
		"%l_iphone_toolchain": "The iPhone Tool Chain",
		"%l_slidenote_iPhone_toolchain": "** Apple has replaced gcc with LLVM compiler<br>** Apple has replaced gdb with LLDB debugger<br>Using the iPhone tool chain is done in the IDE and at first glance it may seem that you need less steps to build your application than in Android, however the difference is that in XCode the build process is linked to the debugger and simulator more tightly.<br>Project manager.<br>First you create the project and set the appropriate parameters in the crate project wizard<br>Then you will be presented with an IDE Editor.<br>The IDE has a built in editor with capabilities like code completion and color coding, etc<br>Separate editor can be used as well<br>Building, compiling and running the debugger in your simulator.<br>In XCode when you hit the build and run icon you will start the compiler and linker to create an executable<br>The executable is then downloaded into the iPhone simulator and is ready to use for testing.<br>Adding breakpoints in the code makes the simulator stop and wait for your input.<br>XCode uses the LLDB debugger as well as the LLVM compiler<br>Signing and package<br>Signing iPhone applications is far more complicated than on Android, you need to go through a number of steps to create key files, device ID registrations and provisioning files from the Apple development portal.<br>					Those are then used in your XCode environment to correctly sign your applications before uploading with the help of iTune Connect. Tools use are the key manager in utilities folder as well as the apple portal and XCode.",
		"%l_iphone_whats_in_the_box": "What's in the box?",
		"%l_slidenote_whats_in_the_box": "Quick tour of what comes with the iOS SDK<br><ul><li>Show SDK location</li><li>Describe Applications directory</li><ul><li>Briefly describe Xcode, Interface Builder, Dashcode editor, Instruments</li></ul>		<li>Describe usr/bin directory</li><ul><li>Command-line tools used by Xcode and Ti Developer</li><li>Xcodebuild command -- used by Ti python scripts</li></ul></ul>",
		"%l_hello_world_iphone": "Hello World",
		"%l_hiworldtoolchainios": "<strong><em>for the iPhone Native Tool Chain</em>",
		"%l_slidenote_hello_world_iphone": "Creating apps for iPhone is mainly done in Xcode, included in Macintosh computers.<br>XCode is an IDE which wrappes all the tools you need, similar to Eclipse in Android.",
		"%l_create_new_iphone_project": "Create a new XCode project for iPhone",
		"%l_slidenote_create_new_iphone_project": "<ol><li>Find and boot the XCode IDE, chose to make an new XCode project.</li><li>Click ”Application” in iOS (for iPhone) and then a template<br>Use either the ”view based” or “tabbbed” application template</li>	<li>Click choose and you will enter the name and location of your iphone application</li><li>Demo Interface Builder to add a button to your view</li><li>Compile and run</li></ol>",
		"%l_xcode_ide_tools": "The XCode IDE tools",
		"%l_slidenote_xcode_ide_tools": "",
		"%l_storyboard_editor": "Storyboard Editor",
		"%l_slidenote_storyboard_editor": "",
		"%l_storyboard_editor_contd": "Storyboard Editor, continued",
		"%l_slidenote_storyboard_editor_contd": "Target can be iPhone or iPad depending on project<br>Select a view/window next<br>Select any control it contains<br>Then, you can drag&drop new controls to page",
		"%l_running_your_app": "Running your application on the simulator",
		"%l_slidenote_running_your_app": "",
		"%l_instrument": "Instruments",
		"%l_slidenote_instrument": "Just like the dalvik monitor in Android, you can start different instrumentation tools to find memory leaks, track threads and processes and to find potential errors. These can be found in the run/run with performance tools menu.",
		"%l_titanium_studio": "Titanium Studio and the SDKs",
		"%l_python": "Titanium Studio relies on Python build scripts (mobile SDK)",
		"%l_scripts": "Scripts interact with native tool chains",
		"%l_mobile_sdk": "Titanium Mobile SDK requires and is dependent on these native tool chains",
		"%l_native_toolchain": "Will still need to use native tool chains (on occasion",
		"%l_slidenote_titanium_studio": "<b>Slide Flow</b><br> Titanium Studio calls the build scripts in the mobile SDK<br><b>Demo:</b> Navigate to the mobile SDK directory on the filesystem, show build scripts and brief explanation of what they are used for (invoking the compilers, shipping to a device)<br>Since the build scripts interface with command line tools like adb, the native SDKs are a hard requirement for mobile development.<br> Ti Studio Premium offers built-in debugging tools, but you may need to use the native tools for debugging<br> In some cases, if your application gets very large or uses lots of different media assets at once, you may need to start profiling your application’s memory use and experiment with ways to reduce memory consumption, but this is a very rare case since Titanium handles memory management for you.",
		"%l_qa": "Q&amp;A",
		"%l_slidenote_qa": "Before we jump into the lab, what questions do you have?",
		"%l_lab": "Lab Objectives",
		"%l_labojbective1": "Create a native Android or iOS project",
		"%l_lablobjective2": "Become familiar with the native tool chains",
		"%l_labURL": "Android: <a href='http://wiki.appcelerator.org/display/td/210+Native+Android+Development'>wiki.appcelerator.org/display/td/210+Native+Android+Development</a>",
		"%l_labURL2": "iOS: <a href='http://wiki.appcelerator.org/display/td/210+Native+iPhone+Development'>wiki.appcelerator.org/display/td/210+Native+iPhone+Development</a>",

		"%l_slidenote_lab": "We don't expect you to be working a lot with the native tools, but some of them are handy at times. <br>In the lab, you’ll create Android and iOS projects using the native tool chains.<br>Roughly 25-30 mins for both labs"
	}
});
